import containerQueries from "@tailwindcss/container-queries";
import { type Config } from "tailwindcss";
import animate from "tailwindcss-animate";
import colors from "tailwindcss/colors";

export default {
  content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
  theme: {
    container: {
      center: true,
      padding: {
        DEFAULT: "1rem",
        sm: "2rem",
        lg: "4rem",
        xl: "5rem",
        "2xl": "6rem",
      },
    },
    colors: {
      primary: {
        50: "hsl(var(--color-primary-50) / <alpha-value>)",
        100: "hsl(var(--color-primary-100) / <alpha-value>)",
        200: "hsl(var(--color-primary-200) / <alpha-value>)",
        300: "hsl(var(--color-primary-300) / <alpha-value>)",
        400: "hsl(var(--color-primary-400) / <alpha-value>)",
        500: "hsl(var(--color-primary-500) / <alpha-value>)",
        600: "hsl(var(--color-primary-600) / <alpha-value>)",
        700: "hsl(var(--color-primary-700) / <alpha-value>)",
        800: "hsl(var(--color-primary-800) / <alpha-value>)",
        900: "hsl(var(--color-primary-900) / <alpha-value>)",
        950: "hsl(var(--color-primary-950) / <alpha-value>)",
      },
      neutral: {
        50: "hsl(var(--color-neutral-50) / <alpha-value>)",
        100: "hsl(var(--color-neutral-100) / <alpha-value>)",
        200: "hsl(var(--color-neutral-200) / <alpha-value>)",
        300: "hsl(var(--color-neutral-300) / <alpha-value>)",
        400: "hsl(var(--color-neutral-400) / <alpha-value>)",
        500: "hsl(var(--color-neutral-500) / <alpha-value>)",
        600: "hsl(var(--color-neutral-600) / <alpha-value>)",
        700: "hsl(var(--color-neutral-700) / <alpha-value>)",
        800: "hsl(var(--color-neutral-800) / <alpha-value>)",
        900: "hsl(var(--color-neutral-900) / <alpha-value>)",
        950: "hsl(var(--color-neutral-950) / <alpha-value>)",
      },
      success: {
        50: "hsl(var(--color-success-50) / <alpha-value>)",
        100: "hsl(var(--color-success-100) / <alpha-value>)",
        200: "hsl(var(--color-success-200) / <alpha-value>)",
        300: "hsl(var(--color-success-300) / <alpha-value>)",
        400: "hsl(var(--color-success-400) / <alpha-value>)",
        500: "hsl(var(--color-success-500) / <alpha-value>)",
        600: "hsl(var(--color-success-600) / <alpha-value>)",
        700: "hsl(var(--color-success-700) / <alpha-value>)",
        800: "hsl(var(--color-success-800) / <alpha-value>)",
        900: "hsl(var(--color-success-900) / <alpha-value>)",
        950: "hsl(var(--color-success-950) / <alpha-value>)",
      },
      warning: {
        50: "hsl(var(--color-warning-50) / <alpha-value>)",
        100: "hsl(var(--color-warning-100) / <alpha-value>)",
        200: "hsl(var(--color-warning-200) / <alpha-value>)",
        300: "hsl(var(--color-warning-300) / <alpha-value>)",
        400: "hsl(var(--color-warning-400) / <alpha-value>)",
        500: "hsl(var(--color-warning-500) / <alpha-value>)",
        600: "hsl(var(--color-warning-600) / <alpha-value>)",
        700: "hsl(var(--color-warning-700) / <alpha-value>)",
        800: "hsl(var(--color-warning-800) / <alpha-value>)",
        900: "hsl(var(--color-warning-900) / <alpha-value>)",
        950: "hsl(var(--color-warning-950) / <alpha-value>)",
      },
      error: {
        50: "hsl(var(--color-error-50) / <alpha-value>)",
        100: "hsl(var(--color-error-100) / <alpha-value>)",
        200: "hsl(var(--color-error-200) / <alpha-value>)",
        300: "hsl(var(--color-error-300) / <alpha-value>)",
        400: "hsl(var(--color-error-400) / <alpha-value>)",
        500: "hsl(var(--color-error-500) / <alpha-value>)",
        600: "hsl(var(--color-error-600) / <alpha-value>)",
        700: "hsl(var(--color-error-700) / <alpha-value>)",
        800: "hsl(var(--color-error-800) / <alpha-value>)",
        900: "hsl(var(--color-error-900) / <alpha-value>)",
        950: "hsl(var(--color-error-950) / <alpha-value>)",
      },
      transparent: colors.transparent,
    },
    aspectRatio: {
      square: "1 / 1",
      "standard-horizontal": "4 / 3",
      "standard-vertical": "3 / 4",
      "wide-horizontal": "16 / 9",
      "wide-vertical": "9 / 16",
      "classic-horizontal": "3 / 2",
      "classic-vertical": "2 / 3",
      "medium-horizontal": "5 / 4",
      "medium-vertical": "4 / 5",
      "panoramic-horizontal": "2 / 1",
      "panoramic-vertical": "1 / 2",
      "anamorphic-horizontal": "21 / 9",
      "anamorphic-vertical": "9 / 21",
    },
    extend: {
      spacing: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      height: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      minHeight: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      maxHeight: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      width: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      minWidth: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      maxWidth: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      size: {
        128: "32rem",
        144: "36rem",
        160: "40rem",
      },
      fontFamily: {
        sans: ["Inter", "system-ui", "sans-serif"],
      },
      zIndex: {
        "60": "60",
        "70": "70",
        "80": "80",
        "90": "90",
        "100": "100",
      },
    },
  },
  plugins: [containerQueries, animate],
} satisfies Config;
